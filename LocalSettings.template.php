<?php
# This file was automatically generated by the MediaWiki 1.37.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# $wgDebugComments = false;
# $wgDebugDumpSql = false;
# $wgDebugProfiling = false;
# $wgDebugTimestamps = true;
# $wgDebugToolbar = true;
# $wgDevelopmentWarnings  = true;
# $wgLogQueries = false;
# $wgResourceLoaderDebug  = false;
$wgShowDBErrorBacktrace = true;
$wgShowExceptionDetails = true;
$wgShowSQLErrors = true;

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

# $wgDebugLogFile = "/var/log/mediawiki/debug.log";

# Disable reading by anonymous users
$wgGroupPermissions['*']['read'] = false;

# Disable anonymous editing
$wgGroupPermissions['*']['edit'] = false;

$wgLogos = [
	#'1x' => "https://storage.googleapis.com/wiki.freshly.com/logo.png",
	'svg' => "https://storage.googleapis.com/wiki.freshly.com/freshly-logo.svg"
];

$wgSitename = "Freshly Wiki";
$wgMetaNamespace = "Freshly_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = '';

## The protocol and server name to use in fully-qualified URLs
$wgServer = 'https://wiki.freshly.com';
$wgForceHTTPS = true;

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
# $wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/wiki.png" ];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = 'user@example.com';
$wgPasswordSender = 'user@example.com';

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "__DB_SERVER__";
$wgDBname = "__DB_NAME__";
$wgDBuser = "__DB_USER__";
$wgDBpassword = "__DB_PASSWORD__";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale. This should ideally be set to an English
## language locale so that the behaviour of C library functions will
## be consistent with typical installations. Use $wgLanguageCode to
## localise the wiki.
$wgShellLocale = "C.UTF-8";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "__SECRET_KEY__";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "__UPGRADE_KEY__";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# End of automatically generated settings.
# Add more configuration options below.
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;
wfLoadExtension( 'VisualEditor' );

$wgGLSecret = '__GOOGLE_LOGIN_SECRET__';
$wgGLAppId = '__GOOGLE_LOGIN_APP_ID__';

# wfLoadExtension( 'GoogleLogin' );
wfLoadExtension( 'PluggableAuth' );

$wgOpenIDConnect_Config['https://accounts.google.com'] = [
    'clientID' => $wgGLAppId,
    'clientsecret' => $wgGLSecret,
    'scope' => [ 'openid', 'profile', 'email' ]
];

$wgOpenIDConnect_UseRealNameAsUserName = true;
$wgOpenIDConnect_UseEmailNameAsUserName = true;

wfLoadExtension( 'OpenIDConnect' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );

wfLoadExtension( 'SemanticMediaWiki' );
enableSemantics( 'wiki.freshly.com' );

require_once "$IP/extensions/SemanticMediaWikiGraph/SemanticMediaWikiGraph.php";

$wgAWSCredentials = [
	'key' => '__AWS_ACCESS_KEY_ID__',
	'secret' => '__AWS_SECRET_ACCESS_KEY__',
	'token' => false
];

$wgAWSRegion = 'us-east-1'; # Northern Virginia

// Replace <something> with the name of your S3 bucket, e.g. wonderfulbali234.
$wgAWSBucketName = "wiki.freshly.com";

wfLoadExtension( 'AWS' );
